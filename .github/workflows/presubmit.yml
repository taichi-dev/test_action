
  
name: Presubmit Checks
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:

  title_format:
    name: Check PR Title
    if: ${{ github.event.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Run PR Title Checker
        run: |
          pip install semver GitPython
          python misc/ci_check_pr_title.py "$PR_TITLE"
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}

  check_code_format:
    name: Check Code Format
    runs-on: ubuntu-latest
    # This job will be required to pass before merging to master branch.
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Setup git & clang-format
        run: |
          git config user.email "taichigardener@gmail.com"
          git config user.name "Taichi Gardener"
          git checkout -b _fake_squash
          git remote add upstream https://github.com/taichi-dev/taichi.git
          git fetch upstream master
          sudo apt install clang-format-10
      - name: Cache PIP
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('setup.py') }}-${{ hashFiles('requirements_dev.txt') }}

      - name: Install requirements
        run: |
          python3 -m pip install --user -r requirements_dev.txt
      - name: Check code format
        run: |
          python3 misc/code_format.py
          git checkout -b _enforced_format
          git commit -am "enforce code format" || true
          # exit with 1 if there were differences:
          git diff _fake_squash _enforced_format --exit-code
  
  performance_monitoring:
    name: Performance monitoring (NVGPU)
    timeout-minutes: 60
    runs-on: [self-hosted, x64, cuda, linux, benchmark]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Build & Install
        run: |
          export PATH=$PATH:/usr/local/cuda/bin
          .github/workflows/scripts/unix_build.sh
        env:
          LLVM_LIB_ROOT_DIR: /opt/taichi-llvm-10.0.0
          LLVM_PATH: /opt/taichi-llvm-10.0.0/bin
          LLVM_DIR: /opt/taichi-llvm-10.0.0/lib/cmake/llvm
          CUDA_TOOLKIT_ROOT_DIR: /usr/local/cuda/
          CI_SETUP_CMAKE_ARGS: -DTI_WITH_CUDA_TOOLKIT:BOOL=ON
          BUILD_NUM_THREADS: 8
          CXX: clang++-10

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          python3 benchmarks/misc/test.py
          python3 benchmarks/misc/print.py