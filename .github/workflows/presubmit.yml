name: Presubmit Checks
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build_and_test_cpu_required:
    # This job will be required to pass before merging to master branch.
    name: Required Build and Test (CPU)
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: 3.6
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Download Pre-Built LLVM 10.0.0
        run: |
          python misc/ci_download.py
          mkdir taichi-llvm
          cd taichi-llvm
          unzip ../taichi-llvm.zip
        env:
          CI_PLATFORM: ${{ matrix.os }}

      - name: Build
        run: |
          export TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/taichi-llvm/bin/:$PATH
          export CXX=clang++
          python misc/ci_setup.py ci
        env:
          CI_SETUP_CMAKE_ARGS: -DTI_WITH_OPENGL:BOOL=OFF -DTI_WITH_CC:BOOL=ON -DTI_BUILD_TESTS:BOOL=ON

      - name: Test
        run: |
          export TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/bin:$PATH
          export PATH=$TAICHI_REPO_DIR/taichi-llvm/bin/:$PATH
          export PYTHONPATH=$TAICHI_REPO_DIR/python
          python examples/algorithm/laplace.py
          ti diagnose
          ./build/taichi_cpp_tests
          ti test -vr2 -t2

  build_and_test_cpu:
    name: Build and Test (CPU)
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: 3.9
            with_cc: OFF
            with_cpp_tests: OFF
          - os: ubuntu-latest
            python: 3.8
            with_cc: ON
            with_cpp_tests: OFF
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Download Pre-Built LLVM 10.0.0
        run: |
          python misc/ci_download.py
          mkdir taichi-llvm
          cd taichi-llvm
          unzip ../taichi-llvm.zip
        env:
          CI_PLATFORM: ${{ matrix.os }}

      - name: Build
        run: |
          export TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/taichi-llvm/bin/:$PATH
          export CXX=clang++
          python misc/ci_setup.py ci
        env:
          CI_SETUP_CMAKE_ARGS: -DTI_WITH_OPENGL:BOOL=OFF -DTI_WITH_CC:BOOL=${{ matrix.with_cc }} -DTI_BUILD_TESTS:BOOL=${{ matrix.with_cpp_tests }}

      - name: Test
        run: |
          export TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/bin:$PATH
          export PATH=$TAICHI_REPO_DIR/taichi-llvm/bin/:$PATH
          export PYTHONPATH=$TAICHI_REPO_DIR/python
          python examples/algorithm/laplace.py
          ti diagnose
          [ "$RUN_CPP_TESTS" = "ON" ] && ./build/taichi_cpp_tests
          ti test -vr2 -t2
        env:
          RUN_CPP_TESTS: ${{ matrix.with_cpp_tests }}

  build_and_test_gpu_linux:
    name: Build and Test (GPU)
    runs-on: [self-hosted, cuda, cn]
    steps:
      - uses: actions/checkout@v2

      - name: Build
        run: |
          git --version
          export TAICHI_REPO_DIR=`pwd`
          export PATH=/home/github/taichi-llvm/bin/:$PATH
          export CXX=clang++-8
          export PYTHON=/usr/bin/python3
          $PYTHON misc/ci_setup.py ci
        env:
          CI_SETUP_CMAKE_ARGS: -DTI_WITH_OPENGL:BOOL=ON -DTI_WITH_CC:BOOL=OFF

      - name: Test
        run: |
          export PYTHON=/usr/bin/python3
          export TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/bin:$PATH
          export PATH=/home/github/taichi-llvm/bin/:$PATH
          export PYTHONPATH=$TAICHI_REPO_DIR/python
          export DISPLAY=:1
          glewinfo
          $PYTHON examples/algorithm/laplace.py
          ti diagnose
          ti test -vr2 -t2
