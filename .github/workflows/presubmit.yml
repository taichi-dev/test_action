name: Presubmit Checks
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build_and_test_cpu_required:
    # This job will be required to pass before merging to master branch.
    name: Required Build and Test (CPU)
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: 3.6
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Download Pre-Built LLVM 10.0.0
        run: |
          python misc/ci_download.py
          mkdir taichi-llvm
          cd taichi-llvm
          unzip ../taichi-llvm.zip
        env:
          CI_PLATFORM: ${{ matrix.os }}

      - name: Build
        run: |
          TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/taichi-llvm/bin/:$PATH
          export CXX=clang++
          python misc/ci_setup.py ci
        env:
          CI_SETUP_CMAKE_ARGS: -DTI_WITH_OPENGL:BOOL=OFF -DTI_WITH_CC:BOOL=ON -DTI_BUILD_TESTS:BOOL=ON

      - name: Test
        run: |
          TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/taichi-llvm/bin/:$PATH
          # Note we only need this since we cannot write into system python package.
          export PATH=$PATH:$HOME/.local/bin
          hash -r
          python examples/algorithm/laplace.py
          ti diagnose
          # TODO: make cpp tests work in both release & dev mode.
          # Currently cpp tests only works in dev mode since it depends on the path set there.
          TAICHI_REPO_DIR=$TAICHI_REPO_DIR ./build/taichi_cpp_tests
          ti test -vr2 -t2

  build_and_test_cpu:
    name: Build and Test (CPU)
    strategy:
      matrix:
        include:
          - os: macos-latest
            python: 3.7
            with_cc: OFF
            with_cpp_tests: ON
          - os: ubuntu-latest
            python: 3.9
            with_cc: OFF
            with_cpp_tests: OFF
          - os: ubuntu-latest
            python: 3.8
            with_cc: ON
            with_cpp_tests: OFF
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Download Pre-Built LLVM 10.0.0
        run: |
          python misc/ci_download.py
          mkdir taichi-llvm
          cd taichi-llvm
          unzip ../taichi-llvm.zip
        env:
          CI_PLATFORM: ${{ matrix.os }}

      - name: Build
        run: |
          TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/taichi-llvm/bin/:$PATH
          export CXX=clang++
          python misc/ci_setup.py ci
        env:
          CI_SETUP_CMAKE_ARGS: -DTI_WITH_OPENGL:BOOL=OFF -DTI_WITH_CC:BOOL=${{ matrix.with_cc }} -DTI_BUILD_TESTS:BOOL=${{ matrix.with_cpp_tests }}

      # [DEBUG] Copy this step around to enable debugging inside Github Action instances.
      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3
      #  with:
      #    limit-access-to-actor: true

      - name: Test
        run: |
          TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/taichi-llvm/bin/:$PATH
          export PATH=$PATH:$HOME/.local/bin
          hash -r
          python examples/algorithm/laplace.py
          ti diagnose
          # TODO: make cpp tests work in both release & dev mode.
          # Currently cpp tests only works in dev mode since it depends on the path set there.
          [ "$RUN_CPP_TESTS" = "ON" ] && TAICHI_REPO_DIR=$TAICHI_REPO_DIR ./build/taichi_cpp_tests
          ti test -vr2 -t2
        env:
          RUN_CPP_TESTS: ${{ matrix.with_cpp_tests }}
